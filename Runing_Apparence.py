# =============================================
# üîó IMPORTA√á√ÉO DE ARQUIVOS INTERNOS (.py)
# =============================================
import Variaveis           # Vari√°veis globais e de controle
import pushyb              # M√≥dulo para captura de valor
import Conversor           # Conversor de formatos de valor

# =============================================
# üß© IMPORTA√á√ÉO DE BIBLIOTECAS EXTERNAS
# =============================================
import time                # Controle de tempo (delays)

# =============================================
# üí∞ CAPTURA INICIAL DO VALOR
# =============================================
Captar_Valor_Final = Variaveis.Valor_Final_pix

# =============================================
# ‚ñ∂Ô∏è EXECU√á√ÉO PRINCIPAL - MAESTRO DOS N√çVEIS
# =============================================
if __name__ == "__main__":
    import Nivelador_de_Processos  # Import din√¢mico apenas se for execu√ß√£o direta

    # üü¢ Inicializa√ß√£o visual do ambiente
    for ignicao in Variaveis.inciando_list:
        print(ignicao)
        time.sleep(Variaveis.Sleep_time)  # Delay de inicializa√ß√£o

    # üõ°Ô∏è Ativando sistema anti-quedas
    Variaveis.ID_NivelamentoContrl = 6
    Nivelador_de_Processos.Nivelamento_de_Solo()

    # üí∏ Captura e convers√£o do valor final do pagamento
    Captar_Valor_Final = pushyb.Captar_Valor_Final(Captar_Valor_Final)
    Captar_Valor_Final = Conversor.tratar_valor_fina_input(Captar_Valor_Final)
    Variaveis.log.append(
        f"Valor Final: R$ {Captar_Valor_Final / 100:,.2f}"
        .replace(",", "X")
        .replace(".", ",")
        .replace("X", ".")
    )

    # üîÅ Atualiza√ß√£o do valor na mem√≥ria
    Variaveis.Valor_Final_pix = Captar_Valor_Final

    # üîÑ Executando novamente nivelador de processos
    Variaveis.ID_NivelamentoContrl = 2
    Nivelador_de_Processos.Nivelamento_de_Solo()

    # üñ®Ô∏è Imprimindo todos os logs capturados
    for log_atual in Variaveis.log:
        print(log_atual)
        time.sleep(Variaveis.Sleep_time)

    print(Variaveis.log_org)
    print(Variaveis.Status_QRCode)
    print(Variaveis.log_org)

    # =========================
    # üîö FINALIZA√á√ÉO DO PROCESSO
    # =========================
    def finish():
        Variaveis.ID_NivelamentoContrl = 1    
        Nivelador_de_Processos.Nivelamento_de_Solo()

    finish()
    print("Finalizando...")
    Nivelador_de_Processos.Nivelamento_de_Solo()
    Variaveis.ID_NivelamentoContrl = 545

    # üîÑ Atualiza√ß√£o final do valor
    Variaveis.Valor_Final_pix = Captar_Valor_Final
